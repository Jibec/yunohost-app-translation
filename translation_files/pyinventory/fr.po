# French translations for PACKAGE package
# Copyright (C) 2025 Free Software Foundation, Inc.
# This file is distributed under the same license as the PACKAGE package.
# Automatically generated, 2025.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"POT-Creation-Date: 2025-03-19 18:14+0100\n"
"PO-Revision-Date: 2025-03-19 18:14+0100\n"
"Last-Translator: Automatically generated\n"
"Language-Team: none\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Plural-Forms: nplurals=2; plural=(n > 1);\n"

#. type: Plain text
#: src/django-fmd/ADMIN.md:2 src/django-for-runners/ADMIN.md:2
#: src/django-fritzconnection/ADMIN.md:2 src/django_example/ADMIN.md:2
#: src/pyinventory/ADMIN.md:2 src/weblate/ADMIN.md:9
msgid "## Settings and upgrades"
msgstr ""

#. type: Plain text
#: src/django-fmd/ADMIN.md:42 src/django-for-runners/ADMIN.md:36
#: src/django-fritzconnection/ADMIN.md:36 src/django_example/ADMIN.md:36
#: src/pyinventory/ADMIN.md:36
msgid ""
"[comment]: <> (✂✂✂ auto generated help start ✂✂✂)  ``` Usage: ./dev-cli.py "
"[OPTIONS] COMMAND [ARGS]..."
msgstr ""

#. type: Plain text
#: src/django-fmd/DESCRIPTION.md:13 src/django-for-runners/DESCRIPTION.md:10
#: src/django-fritzconnection/DESCRIPTION.md:10
#: src/django_example/DESCRIPTION.md:10 src/pyinventory/DESCRIPTION.md:10
msgid "Pull requests welcome ;)"
msgstr ""

#. type: Plain text
#: src/django-fmd/DESCRIPTION.md:14 src/django-for-runners/DESCRIPTION.md:12
#: src/django-fritzconnection/DESCRIPTION.md:11
#: src/django_example/DESCRIPTION.md:11 src/pyinventory/DESCRIPTION.md:12
msgid ""
"This package for YunoHost used [django-yunohost-integration](https://github."
"com/YunoHost-Apps/django_yunohost_integration)"
msgstr ""

#. type: Plain text
#: src/django-for-runners/ADMIN.md:7 src/django-fritzconnection/ADMIN.md:7
#: src/django_example/ADMIN.md:7 src/pyinventory/ADMIN.md:7
msgid "Test sending emails, e.g.:"
msgstr ""

#. type: Plain text
#: src/django-for-runners/ADMIN.md:14 src/django-fritzconnection/ADMIN.md:14
#: src/django_example/ADMIN.md:14 src/pyinventory/ADMIN.md:14
msgid "How to debug a django YunoHost app, take a look into:"
msgstr ""

#. type: Plain text
#: src/django-for-runners/ADMIN.md:18 src/django-fritzconnection/ADMIN.md:18
#: src/django_example/ADMIN.md:18 src/pyinventory/ADMIN.md:18
msgid "## local test"
msgstr ""

#. type: Plain text
#: src/django-for-runners/ADMIN.md:32 src/django-fritzconnection/ADMIN.md:32
#: src/django_example/ADMIN.md:32 src/pyinventory/ADMIN.md:32
msgid "The output will looks like:"
msgstr ""

#. type: Plain text
#: src/pyinventory/ADMIN.md:5
msgid ""
"Almost everything related to PyInventory's configuration is handled in a "
"`\"../conf/settings.py\"` file.  You can edit the file `/home/yunohost.app/"
"django_example/local_settings.py` to enable or disable features."
msgstr ""

#. type: Plain text
#: src/pyinventory/ADMIN.md:12
msgid ""
"```bash ssh admin@yourdomain.tld root@yunohost:~# /home/yunohost.app/"
"pyinventory/manage.py sendtestemail --admins ```"
msgstr ""

#. type: Bullet: '* '
#: src/pyinventory/ADMIN.md:16
msgid "https://github.com/YunoHost-Apps/pyinventory_ynh#developer-info"
msgstr ""

#. type: Plain text
#: src/pyinventory/ADMIN.md:22
msgid ""
"For quicker developing of pyinventory_ynh in the context of YunoHost app, "
"it's possible to run the Django developer server with the settings and urls "
"made for YunoHost installation."
msgstr ""

#. type: Plain text
#: src/pyinventory/ADMIN.md:29
msgid ""
"e.g.: ```bash ~$ git clone https://github.com/YunoHost-Apps/django_example."
"git ~$ cd pyinventory_ynh/ ~/django_example$ ./dev-cli.py --help ```"
msgstr ""

#. type: Plain text
#: src/pyinventory/ADMIN.md:60
#, no-wrap
msgid ""
"╭─ Options ────────────────────────────────────────────────────────────────────────────────────────╮\n"
"│ --help      Show this message and exit.                                                          │\n"
"╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\n"
"╭─ Commands ───────────────────────────────────────────────────────────────────────────────────────╮\n"
"│ check-code-style            Check code style by calling darker + flake8                          │\n"
"│ coverage                    Run tests and show coverage report.                                  │\n"
"│ diffsettings                Run \"diffsettings\" manage command against a \"local_test\" YunoHost    │\n"
"│                             installation.                                                        │\n"
"│ fix-code-style              Fix code style of all pyinventory_ynh source code files via darker   │\n"
"│ install                     Run pip-sync and install 'pyinventory_ynh' via pip as editable.      │\n"
"│ local-test                  Build a \"local_test\" YunoHost installation and start the Django dev. │\n"
"│                             server against it.                                                   │\n"
"│ mypy                        Run Mypy (configured in pyproject.toml)                              │\n"
"│ pip-audit                   Run pip-audit check against current requirements files               │\n"
"│ publish                     Build and upload this project to PyPi                                │\n"
"│ test                        Compile YunoHost files and run Django unittests                      │\n"
"│ tox                         Run tox                                                              │\n"
"│ update                      Update \"requirements*.txt\" dependencies files                        │\n"
"│ update-test-snapshot-files  Update all test snapshot files (by remove and recreate all snapshot  │\n"
"│                             files)                                                               │\n"
"│ version                     Print version and exit                                               │\n"
"╰──────────────────────────────────────────────────────────────────────────────────────────────────╯\n"
"```\n"
"[comment]: <> (✂✂✂ auto generated help end ✂✂✂)\n"
msgstr ""

#. type: Plain text
#: src/pyinventory/DESCRIPTION.md:6
msgid ""
"[![tests](https://github.com/YunoHost-Apps/pyinventory_ynh/actions/workflows/"
"tests.yml/badge.svg?branch=main)](https://github.com/YunoHost-Apps/"
"pyinventory_ynh/actions/workflows/tests.yml)  [![codecov](https://codecov.io/"
"github/jedie/pyinventory_ynh/branch/main/graph/badge.svg)](https://app."
"codecov.io/github/jedie/pyinventory_ynh)  [![pyinventory_ynh @ PyPi](https://"
"img.shields.io/pypi/v/pyinventory_ynh?label=pyinventory_ynh%20%40%20PyPi)]"
"(https://pypi.org/project/pyinventory_ynh/)  [![Python Versions](https://img."
"shields.io/pypi/pyversions/pyinventory_ynh)](https://github.com/YunoHost-"
"Apps/pyinventory_ynh/blob/main/pyproject.toml)  [![License GPL-3.0-or-later]"
"(https://img.shields.io/pypi/l/pyinventory_ynh)](https://github.com/YunoHost-"
"Apps/pyinventory_ynh/blob/main/LICENSE)"
msgstr ""

#. type: Plain text
#: src/pyinventory/DESCRIPTION.md:8
msgid ""
"[PyInventory](https://github.com/jedie/PyInventory) is a libre web-based "
"management to catalog things including state and location etc. using [Python]"
"(https://www.python.org/)/[Django](https://www.djangoproject.com/)."
msgstr ""

#. type: Plain text
#: src/pyinventory/DESCRIPTION.md:13
msgid ""
"More screenshots are here: jedie.github.io/tree/master/screenshots/"
"PyInventory"
msgstr ""
